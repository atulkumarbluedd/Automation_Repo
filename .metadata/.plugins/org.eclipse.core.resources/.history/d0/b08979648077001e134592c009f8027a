package codingPackage;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;

import io.opentelemetry.exporter.logging.SystemOutLogRecordExporter;

public class sample {
	class Node {
		int val;
		Node next;
		Node(int val){
			this.val=val;
		}
	}
  public static void main(String[] args) {
//	  HashSet<Integer> set = new HashSet();
//	 
//	  System.out.println(set.contains(1));
//	  LinkedList<Integer>[] ll ;
//	    List<Integer>[] buckets = new LinkedList[120];
//	    LinkedList<Integer> list2= new LinkedList<>();
//	    list2.add(1);
//	    list2.add(2);
//	    list2.add(null);
//	    list2.add(null);
//	    list2.add(2);
//	   int index= list2.indexOf(null);
//	    System.out.println(index);
//	    System.out.println(list2);
//	    buckets[0]=list2;
//	    buckets[1]=list2;
//	    System.out.println("***************************");
//	    System.out.println(Arrays.toString(buckets));
//	  LinkedList<Entry>[] temp = new LinkedList[4];
//	  Entry e= new Entry(2,3);
//	  Entry e1= new Entry(7,8);
//	  temp[1]=new LinkedList<>();
//	  temp[0]=new LinkedList<>();
//	  temp[1].add(e);
//	  temp[1].add(e1);
//	  System.out.println(temp[1].get(1).key);
//	   
//	  
//	  String str= "healo";
//	  String s1=str.substring(0,2);
//	  String s22=str.substring(3);
//	  System.out.println(s1);
//	  System.out.println(s22);
	  int[] data = {1,2,3,4,5,6,7,8,9,10};
	

	// To boxed array
	  List<Integer> list  = Arrays.stream( data ).boxed().collect( Collectors.toList() );
	  Integer[] arr
      = list.stream().toArray(Integer[] ::new);
     System.out.println(Arrays.toString(arr));
}
 
}
class Entry{
	int key;
	int value;
	public Entry(int key, int value)
	{
		this.key=key;
		this.value=value;
	}
	public int getkey(int key) {
		return this.value;
	}
	public int getValue(int value) {
		return value;
	}
}
