package com.group.guru99;

import java.util.Arrays;
import java.util.Comparator;
import java.util.PriorityQueue;

public class cordinates {

	int x, y, distance;

	cordinates(int x, int y) {
		this.x = x;
		this.y = y;
		this.distance = (int) Math.pow(x, 2) + (int) Math.pow(x, 2);
	}

}

class mycomparator implements Comparator<cordinates> {

	@Override
	public int compare(cordinates c1, cordinates c2) {
		return c1.distance - c2.distance;
	}

}

class solution {

	public static void main(String[] args) {
		int points[][] = new int[][] { { 3, 3 }, { 5, -1 }, { -2, 4 } };
		int k = 2;
		PriorityQueue<cordinates> pq = new PriorityQueue();
		for (int[] point : points)
			pq.offer(new cordinates(point[0], point[1]));
		int[][] closest = new int[k][2];
		int index = 0;
		while (k-- > 0) {
			closest[index][0] = pq.peek().x;
			closest[index][1] = pq.peek().y;
			index++;
		}
		System.out.println(Arrays.toString(closest));
	}
}
